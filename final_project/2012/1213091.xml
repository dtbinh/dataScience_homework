<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Large: Collaborative Research: Science and Tools for Software Evolution</AwardTitle>
    <AwardEffectiveDate>07/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2016</AwardExpirationDate>
    <AwardAmount>1000985</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Successful software constantly evolves. Most programmers work on projects they did not start. Most companies spend more on maintaining old systems than on building new ones. This is good, because it shows that companies build software that is worth keeping and maintaining, but it also means that change is the heart of software development. Most programming tools treat change at a very low level: programmers make most changes with text editors, and tools tend to focus on changes to lines of text, and although programming is predominantly about change, contemporary tools do not provide direct support for understanding or facilitating change. This makes programming more expensive, time-consuming, and error-prone than it should be. This research project will develop a change-oriented programming environment (COPE) that supports change by putting transformations at the center of software development. COPE will enable both average and expert programmers to write, script, modify, and replay their own transformations. COPE will enable programmers to think about programs as compositions of transformations, and to automate as many of these transformations as possible. Characterizing software development in terms of transformations is an essential step to take software engineering from manual development to automated (or semi-automated) development of software.&lt;br/&gt;&lt;br/&gt;By enabling programmers to express their programming tasks as program transformations, COPE will alter the way programmers think about, teach, create, reuse, and understand programs. Specifically, COPE considers five activities: (1) analyze what changes programmers typically make and how they perceive, recall, and communicate changes, (2) automate transformations to make it easier to apply and script changes, (3) develop tools that compose and manipulate transformations to make it easier to reuse them, (4) integrate transformations with version control to provide better ways for archiving and understanding changes, and (5) develop tools that infer higher-level transformations from lower-level changes. COPE will deliver a rich transformation-aware toolset that synergistically integrates all these activities. COPE aims to (a) change the way people program, (b) create a platform for research for future research, and (c) produce results that ultimately will become standard software development practice. The PIs will disseminate the results through presentations, books, publications, open-source code, industrial collaborations, and educational activities. A version of COPE will be used to revamp the software engineering curriculum at the University of Illinois and the University of Texas to emphasize the science of change in large code bases.</AbstractNarration>
    <MinAmdLetterDate>06/27/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>06/27/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1213091</AwardID>
    <Investigator>
      <FirstName>Ralph</FirstName>
      <LastName>Johnson</LastName>
      <EmailAddress>johnson@cs.uiuc.edu</EmailAddress>
      <StartDate>06/27/2012</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Brian</FirstName>
      <LastName>Bailey</LastName>
      <EmailAddress>bpbailey@illinois.edu</EmailAddress>
      <StartDate>06/27/2012</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Darko</FirstName>
      <LastName>Marinov</LastName>
      <EmailAddress>marinov@cs.uiuc.edu</EmailAddress>
      <StartDate>06/27/2012</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Daniel</FirstName>
      <LastName>Dig</LastName>
      <EmailAddress>dig@illinois.edu</EmailAddress>
      <StartDate>06/27/2012</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award>
</rootTag>
