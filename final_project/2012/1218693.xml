<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Real-Time Computing Using GPUs</AwardTitle>
    <AwardEffectiveDate>08/15/2012</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2015</AwardExpirationDate>
    <AwardAmount>400000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>D. Helen Gill</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>The computing industry recently experienced a major shift in CPU architectures with the advent of multicore chips. This shift has necessitated the adoption of new programming models, algorithms, and analysis methods to fully exploit the parallelism inherent in multicore chip designs. While advances in these areas are well underway, industry has already begun yet another architectural shift towards systems with heterogeneous processing elements. Heterogeneity creates new challenges because the availability of different types of processing elements means that nontrivial choices must be made when allocating hardware resources to software components.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;One of the most successful applications of heterogeneity today is in architectures in which powerful graphics processing units (GPUs) are used alongside general-purpose CPUs. Though originally intended as special-purpose graphics accelerators, GPUs are now being widely used for non-graphics processing in numerous application domains, including many domains in which real-time constraints (e.g., deadline requirements) exist. For example, envisioned automated automotive systems will require real-time sensing and tracking features that GPUs can accelerate. The goal of this project is to determine which resource allocation methods best facilitate the support of such real-time applications on heterogeneous platforms that may have multiple CPUs and GPUs. This goal is being met by undertaking a broad study of issues affecting the deployment and analysis of real-time applications implemented on GPU-enabled multicore platforms. Broader impacts include joint research with industry colleagues, and the development of publicly-available open-source software that can be used by other institutions for research and teaching purposes.</AbstractNarration>
    <MinAmdLetterDate>08/27/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>08/27/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1218693</AwardID>
    <Investigator>
      <FirstName>Sanjoy</FirstName>
      <LastName>Baruah</LastName>
      <EmailAddress>baruah@cs.unc.edu</EmailAddress>
      <StartDate>08/27/2012</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>James</FirstName>
      <LastName>Anderson</LastName>
      <EmailAddress>anderson@cs.unc.edu</EmailAddress>
      <StartDate>08/27/2012</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of North Carolina at Chapel Hill</Name>
      <CityName>CHAPEL HILL</CityName>
      <ZipCode>275991350</ZipCode>
      <PhoneNumber>9199663411</PhoneNumber>
      <StreetAddress>104 AIRPORT DR STE 2200</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>North Carolina</StateName>
      <StateCode>NC</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
  </Award>
</rootTag>
