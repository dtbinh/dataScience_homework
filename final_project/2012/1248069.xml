<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>Generating Octagonal Invariants using Quantifier Elimination Heuristics</AwardTitle>  
    <AwardEffectiveDate>09/01/2012</AwardEffectiveDate>  
    <AwardExpirationDate>08/31/2013</AwardExpirationDate>  
    <AwardAmount>83166</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05010000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computer and Communication Foundations</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>Nina Amla</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>With software becoming more and more complex, ensuring its total correctness, in the absence of full formal and rigorous specifications, has become a highly nontrivial task. Lightweight program analysis techniques which go beyond type checking and detect semantic bugs are thus becoming increasing relevant. This is especially so given that bugs such as buffer overflows can be exploited to cause havoc, bringing organizations to a stand-still and causing considerable financial loss. &lt;br/&gt;&lt;br/&gt;This project will explore geometric heuristics for quantifier elimination to automatically derive a restricted class of invariant properties of programs, with the goal of developing scalable highly efficient algorithms for program analysis. Particular attention will be paid to properties expressed using numerical relational constraints on program variables; industrial experience suggests that automatically deriving such properties from unannotated and unspecified programs is extremely useful in finding bugs in industrial software. Recent advances made in satisfiability modulo theories (SMT) solvers and automated reasoning techniques as well as already built tools for quantifier elimination will be exploited to achieve this. This project will build a repertoire of techniques to be used in tools analyzing programs including optimizing compilers, debuggers, and verifiers as well as those for identifying security violations in computer networks.</AbstractNarration>  
    <MinAmdLetterDate>07/25/2012</MinAmdLetterDate>  
    <MaxAmdLetterDate>07/25/2012</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1248069</AwardID>  
    <Investigator> 
      <FirstName>Deepak</FirstName>  
      <LastName>Kapur</LastName>  
      <EmailAddress>kapur@cs.unm.edu</EmailAddress>  
      <StartDate>07/25/2012</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>University of New Mexico</Name>  
      <CityName>ALBUQUERQUE</CityName>  
      <ZipCode>871310001</ZipCode>  
      <PhoneNumber>5052774186</PhoneNumber>  
      <StreetAddress>1700 Lomas Blvd. NE, Suite 2200</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>New Mexico</StateName>  
      <StateCode>NM</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award> 
</rootTag>
