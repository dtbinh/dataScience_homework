<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Verifying Threaded Software Using Resource Bounds -- An Approach Towards Dependable Concurrency</AwardTitle>
    <AwardEffectiveDate>05/01/2013</AwardEffectiveDate>
    <AwardExpirationDate>04/30/2018</AwardExpirationDate>
    <AwardAmount>209458</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Nina Amla</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Software development is facing a paradigm shift towards ubiquitous&lt;br/&gt;concurrent programming, giving rise to software that is among the most&lt;br/&gt;complex technical artifacts ever created by humans. Concurrent programming&lt;br/&gt;presents several risks and dangers for programmers who are overwhelmed by puzzling &lt;br/&gt;and irreproducible concurrent program behavior, and by new types of bugs that elude &lt;br/&gt;traditional quality assurance techniques. If this situation is not addressed, we are &lt;br/&gt;drifting into an era of widespread unreliable software, with consequences ranging &lt;br/&gt;from collapsed programmer productivity, to catastrophic failures in mission-critical systems.&lt;br/&gt;&lt;br/&gt;This project will take steps against a concurrent software crisis, by&lt;br/&gt;producing verification technology that assists non-specialist programmers&lt;br/&gt;in detecting concurrency errors, or demonstrating their absence. The&lt;br/&gt;proposed technology will confront the concurrency explosion problem that&lt;br/&gt;verification methods often suffer from. The project's goal is a framework&lt;br/&gt;under which the analysis of programs with unbounded concurrency resources&lt;br/&gt;(such as threads of execution) can be soundly reduced to an analysis under&lt;br/&gt;a small constant resource bound, making the use of state space explorers&lt;br/&gt;practical. As a result, the project will largely eliminate the impact of&lt;br/&gt;unspecified computational resources as the major cause of complexity in&lt;br/&gt;analyzing concurrent programs. By developing tools for detecting otherwise &lt;br/&gt;undetectable misbehavior and vulnerabilities in concurrent programs, the &lt;br/&gt;project will contribute its part to averting a looming software quality crisis.</AbstractNarration>
    <MinAmdLetterDate>01/18/2013</MinAmdLetterDate>
    <MaxAmdLetterDate>01/18/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1253331</AwardID>
    <Investigator>
      <FirstName>Thomas</FirstName>
      <LastName>Wahl</LastName>
      <EmailAddress>wahl@ccs.neu.edu</EmailAddress>
      <StartDate>01/18/2013</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>Northeastern University</Name>
      <CityName>BOSTON</CityName>
      <ZipCode>021155005</ZipCode>
      <PhoneNumber>6173735600</PhoneNumber>
      <StreetAddress>360 HUNTINGTON AVE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramElement>
  </Award>
</rootTag>
