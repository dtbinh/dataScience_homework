<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Small: Automated Software Fault Localization via Static and Dynamic Analysis</AwardTitle>
    <AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2015</AwardExpirationDate>
    <AwardAmount>490001</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Theodore Baker</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This project aims to improve tool support for software debugging, by providing automatic assistance in the identification of root causes of a software failure using static and dynamic program analysis techniques. A flexible diagnosis framework first identifies candidate root causes of a failure and then uses a broad, open-ended series of diagnosic "filters" to narrow down the most likely root causes. A key innovation is that the system automatically generates "passing" and "failing" inputs for diagnosis that are close to the original failing input, making it less likely that root causes are missed. The work develops two approaches for this difficult step, based on concolic testing and on string rewriting using the application's input grammar, and investigates various types of program properties ("likely invariants") for effective localization of various classes of bugs. Candidates are then winnowed using novel filters based on existing and new program analyses to pinpoint root causes with few false positives.&lt;br/&gt;&lt;br/&gt;This research will significantly increase programmer productivity by reducing manual debugging effort and improve reliability and security by reducing the time to fix critical software failures. A fully-automated diagnosis tool based on the widely-used LLVM compiler will be publicly distributed for developers to use. It will also be used for teaching debugging techniques and program analysis techniques in university classes.</AbstractNarration>
    <MinAmdLetterDate>08/24/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>08/24/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1219080</AwardID>
    <Investigator>
      <FirstName>Vikram</FirstName>
      <LastName>Adve</LastName>
      <EmailAddress>vadve@cs.uiuc.edu</EmailAddress>
      <StartDate>08/24/2012</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Urbana-Champaign</Name>
      <CityName>CHAMPAIGN</CityName>
      <ZipCode>618207473</ZipCode>
      <PhoneNumber>2173332187</PhoneNumber>
      <StreetAddress>SUITE A</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
  </Award>
</rootTag>
