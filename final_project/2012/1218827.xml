<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>RUI: Distributed Programming with AlphaZ</AwardTitle>
    <AwardEffectiveDate>06/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>05/31/2015</AwardExpirationDate>
    <AwardAmount>133583</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Almadena Y. Chtchelkanova</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Computer programmers must create software that produces a correct answer while making effective use of the computer hardware. This challenge of combining correctness and efficient hardware use is particularly difficult in scientific research, which often requires novel computing hardware for complex calculations. Different software "tuning" techniques are needed for shared-memory multi-core computers, distributed systems such as clusters of workstations, and high-speed graphics processors. Thus, scientific research with a computational element often requires great programming effort, which must be done with care, as performance tuning can introduce errors into a working program. The traditional alternative to manual performance tuning is the use of an automatic optimizing compiler. Such systems have largely replaced human beings for many tuning steps for single-core microprocessors (such as instruction selection and register allocation). More recently, research compilers such as Pluto have shown significant success in organizing the sharing of work within multi-core processors. Programmers using these systems are spared the work of tuning, but lose the ability to explore approaches that were not foreseen or chosen by the designer of the compiler. The AlphaZ system puts the mathematical foundation of the Pluto compiler (the "polyhedral framework") under control of the programmer, allowing manual tuning without needless effort or error. Like Pluto, AlphaZ can tune software for single- or multi-core systems. Pluto and AlphaZ are each the subject of ongoing research to support distributed computing by automatically transforming programs to distribute work across a cluster of computers with the MPI library. However, neither research project allows the programmer to explore novel ways to organize the motion of data among the constituent computers of a cluster.&lt;br/&gt;This RUI project is exploring extensions to the AlphaZ system to allow programmer-directed data transfer with MPI focusing both on the high-level design of these extensions and on anticipating implementation challenges. The envisioned extensions to AlphaZ will facilitate exploration, by both compiler writers and programmers, of strategies for moving data in a distributed computing environment. Furthermore, these extensions will validate a program tuning strategy that could be applied to other new architectures such as graphics processors.</AbstractNarration>
    <MinAmdLetterDate>05/16/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>05/16/2012</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1218827</AwardID>
    <Investigator>
      <FirstName>David</FirstName>
      <LastName>Wonnacott</LastName>
      <EmailAddress>davew@cs.haverford.edu</EmailAddress>
      <StartDate>05/16/2012</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>John</FirstName>
      <LastName>Dougherty</LastName>
      <EmailAddress>jd@cs.haverford.edu</EmailAddress>
      <StartDate>05/16/2012</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Institution>
      <Name>Haverford College</Name>
      <CityName>Haverford</CityName>
      <ZipCode>190411392</ZipCode>
      <PhoneNumber>6108961000</PhoneNumber>
      <StreetAddress>370 Lancaster Avenue</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Pennsylvania</StateName>
      <StateCode>PA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award>
</rootTag>
