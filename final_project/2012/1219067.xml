<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>SHF: Small: Incremental Inductive Verification: A New Direction for Model Checking</AwardTitle>  
    <AwardEffectiveDate>07/01/2012</AwardEffectiveDate>  
    <AwardExpirationDate>06/30/2015</AwardExpirationDate>  
    <AwardAmount>496992</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05010000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computing and Communication Foundations</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>Nina Amla</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>Hardware and software computer systems are integrated into many aspects of our society, including medicine, transportation, financial markets, and communication. Thus, the correctness of a computer system can be critical for financial or even human safety reasons. Formal verification is a methodology for finding errors and certifying that a system is free of errors. It complements testing, which in practice can neither cover every possibility nor declare the absence of errors. Because of the increasing complexity and prevalence of computer systems in recent years, significant improvements in algorithms for formal verification now have an immediate impact in computer system development, which in turn decreases design costs, accelerates development, and results in safer equipment.&lt;br/&gt;&lt;br/&gt;This project builds on the success of the IC3 algorithm for verifying invariance properties of digital hardware. IC3, introduced only two years ago, is already used widely by hardware manufacturers and electronic design automation companies. It is reported that it can, in practice, find deep bugs that are difficult to find with testing, or obtain proofs that no other algorithm can find. But achieving the next significant gain in performance requires moving beyond the bit-level analysis that IC3 performs and instead considering designs at the word level, that is, at a level in which whole registers are sometimes considered rather just than their component latches. This project addresses this challenge by developing a multi-domain version of IC3, as well as abstract domains, for reasoning about equality, uninterpreted functions, and arithmetic properties of circuits. A second component of this project is to extend the incremental, inductive verification (IIV) methodology, of which IC3 was the first instance, to analyze properties expressed in CTL and CTL*, which are logics for expressing branching-time behavior. Increased expressiveness allows analyzing more aspects of a design. A final component is to exploit the natural parallelism of IIV algorithms through a distributed implementation.</AbstractNarration>  
    <MinAmdLetterDate>06/12/2012</MinAmdLetterDate>  
    <MaxAmdLetterDate>06/12/2012</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1219067</AwardID>  
    <Investigator> 
      <FirstName>Fabio</FirstName>  
      <LastName>Somenzi</LastName>  
      <EmailAddress>Fabio@Colorado.EDU</EmailAddress>  
      <StartDate>06/12/2012</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Investigator> 
      <FirstName>Aaron</FirstName>  
      <LastName>Bradley</LastName>  
      <EmailAddress>aaron.r.bradley@colorado.edu</EmailAddress>  
      <StartDate>06/12/2012</StartDate>  
      <EndDate/>  
      <RoleCode>2</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>University of Colorado at Boulder</Name>  
      <CityName>Boulder</CityName>  
      <ZipCode>803090572</ZipCode>  
      <PhoneNumber>3034926221</PhoneNumber>  
      <StreetAddress>3100 Marine Street, Room 481</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>Colorado</StateName>  
      <StateCode>CO</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award> 
</rootTag>
