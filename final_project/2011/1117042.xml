<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Developing and Applying Reuse Distance Analysis Techniques for Large-Scale Multicore Processors</AwardTitle>
    <AwardEffectiveDate>07/15/2011</AwardEffectiveDate>
    <AwardExpirationDate>06/30/2014</AwardExpirationDate>
    <AwardAmount>499998</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Almadena Y. Chtchelkanova</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Today, simulation is the de facto method for studying multicore cache hierarchies. But simulation is costly due to the combinatorial design spaces involved, especially as multicore processors scale to 100s of cores and 100+ MB of on-chip cache. Reuse distance (RD) analysis can help architects evaluate multicore memory performance more efficiently. Unfortunately, locality in multicore processors depends on how per-thread memory reference streams interleave. Reliance on memory interleaving makes multicore locality profiles architecture dependent, limiting their ability to analyze different configurations. For loop-based parallel programs, however, threads are typically symmetric and exhibit similar locality characteristics. Such thread symmetry makes multicore RD analysis tractable: locality profiles remain stable with respect to cache capacity scaling, and change systematically with core count and problem size scaling.&lt;br/&gt;&lt;br/&gt;This project is exploring several research directions related to multicore RD analysis for loop-based parallel programs. First, it is characterizing how Concurrent RD and per-thread RD profiles for symmetric threads vary with processor and problem scaling. Second, it is developing techniques to predict these profile variations. Simple prediction techniques such as reference groups, as well as more sophisticated parametric and non-parametric learning approaches, are being studied. Finally, it is applying the new RD analysis to explore large-scale multicore design spaces, identifying good cache hierarchy organizations. It is also using the RD analyses to improve existing memory performance enhancement techniques such as multithreading and locality optimization.</AbstractNarration>
    <MinAmdLetterDate>07/11/2011</MinAmdLetterDate>
    <MaxAmdLetterDate>07/11/2011</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1117042</AwardID>
    <Investigator>
      <FirstName>Ankur</FirstName>
      <LastName>Srivastava</LastName>
      <EmailAddress>ankurs@eng.umd.edu</EmailAddress>
      <StartDate>07/11/2011</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Donald</FirstName>
      <LastName>Yeung</LastName>
      <EmailAddress>yeung@umiacs.umd.edu</EmailAddress>
      <StartDate>07/11/2011</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Maryland College Park</Name>
      <CityName>COLLEGE PARK</CityName>
      <ZipCode>207425141</ZipCode>
      <PhoneNumber>3014056269</PhoneNumber>
      <StreetAddress>3112 LEE BLDG</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Maryland</StateName>
      <StateCode>MD</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award>
</rootTag>
