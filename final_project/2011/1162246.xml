<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CSR: Medium: Collaborative Research: Portable Performance for Parallel Managed Languages Across the Many-Core Spectrum</AwardTitle>
    <AwardEffectiveDate>06/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>05/31/2015</AwardExpirationDate>
    <AwardAmount>362058</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Krishna Kant</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Computers with many tens to hundreds of ?cores? are on their way, but programming languages and tools&lt;br/&gt;that exploit them well have lagged. At the same time, there are emerging programming languages intended&lt;br/&gt;for writing programs to run on these computers. These languages, such as X10 and Fortress, add support for&lt;br/&gt;new concepts that make it easier to write many-core programs, but there does not yet exist good compiler and&lt;br/&gt;run-time support for these languages. Systems that run Java, namely Java virtual machines such as those that&lt;br/&gt;run on virtually every laptop, desktop, and server today, supply much of what the new languages need, but&lt;br/&gt;fall short in some important ways. In particular they do not provide for saying in which part of memory to&lt;br/&gt;place particular objects, on which core to run which computations, easy ways to get all cores busy working&lt;br/&gt;on different parts of a big piece of data, or for synchronizing and getting right all the data manipulations&lt;br/&gt;happening at the same time. This project is extending an existing research Java virtual machine (Jikes&lt;br/&gt;RVM) with support for many ways of doing the things that the new languages need in order to run well&lt;br/&gt;on many-core computers. The primary goal is to devise extensions to standard Java virtual machines for&lt;br/&gt;this new world, and to make it possible for many others to experiment with different ways of implementing&lt;br/&gt;these extensions, thus leveraging the creativity of the whole community of language and virtual machine&lt;br/&gt;researchers. Secondary goals include offering reasonably good initial implementations of virtual machine&lt;br/&gt;extensions as a starting point for future research and development, and proposing specific extensions to the&lt;br/&gt;Java virtual machine specification standard.</AbstractNarration>
    <MinAmdLetterDate>06/15/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>05/30/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1162246</AwardID>
    <Investigator>
      <FirstName>J. Eliot</FirstName>
      <LastName>Moss</LastName>
      <EmailAddress>moss@cs.umass.edu</EmailAddress>
      <StartDate>06/15/2012</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>Timothy</FirstName>
      <LastName>Richards</LastName>
      <EmailAddress>richards@cs.umass.edu</EmailAddress>
      <StartDate>06/15/2012</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Massachusetts Amherst</Name>
      <CityName>AMHERST</CityName>
      <ZipCode>010039242</ZipCode>
      <PhoneNumber>4135450698</PhoneNumber>
      <StreetAddress>Research Administration Building</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>1714</Code>
      <Text>SPECIAL PROJECTS - CISE</Text>
    </ProgramElement>
  </Award>
</rootTag>
