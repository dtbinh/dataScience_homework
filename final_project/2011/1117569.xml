<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Improving the Applicability of Haskell-Hosted Semi-Formal Models to High Assurance Development</AwardTitle>
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>
    <AwardAmount>527750</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>John Reppy</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>In engineering practice, models are&lt;br/&gt;an essential part of understanding how to build complex systems. In&lt;br/&gt;this project, high-level models and efficient implementations of&lt;br/&gt;computer systems will be developed side-by-side under a single&lt;br/&gt;framework that bridges the gap between them using a high degree of&lt;br/&gt;automation. This is possible due to the use of a modern functional&lt;br/&gt;language for both the model and implementation, and the deployment of&lt;br/&gt;a new and powerful general-purpose and semi-automatic refinement technology.&lt;br/&gt;&lt;br/&gt;The functional language Haskell has already enjoyed considerable&lt;br/&gt;success as a platform for high-level modeling of complex systems with&lt;br/&gt;its mathematical-style syntax, state-of-the-art type system, and&lt;br/&gt;powerful abstraction mechanisms.&lt;br/&gt;In this project, Haskell will be used to express a semi-formal&lt;br/&gt;model and an efficient implementation, taking the form of two distinct&lt;br/&gt;expressions of computation with the same mathematical foundation.&lt;br/&gt;The project develops tools and methodologies that use transformations like&lt;br/&gt;the worker/wrapper transformation to construct links between these models&lt;br/&gt;and implementations, lowering the cost of the development of&lt;br/&gt;high-assurance software and hardware components in application&lt;br/&gt;areas like security kernels and critical control systems.&lt;br/&gt;Lowering the cost of linking semi-formal specifications and models to&lt;br/&gt;real implementations will have considerable&lt;br/&gt;impact. For example, Evaluation Assurance Level (EAL) 5 and 6 of the&lt;br/&gt;Common Criteria call for semi-formal methods to construct such links,&lt;br/&gt;and this project addresses keys part of this requirement.</AbstractNarration>
    <MinAmdLetterDate>07/27/2011</MinAmdLetterDate>
    <MaxAmdLetterDate>05/20/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1117569</AwardID>
    <Investigator>
      <FirstName>Andrew</FirstName>
      <LastName>Gill</LastName>
      <EmailAddress>andygill@ku.edu</EmailAddress>
      <StartDate>07/27/2011</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Kansas Center for Research Inc</Name>
      <CityName>LAWRENCE</CityName>
      <ZipCode>660457568</ZipCode>
      <PhoneNumber>7858643441</PhoneNumber>
      <StreetAddress>2385 IRVING HILL RD</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Kansas</StateName>
      <StateCode>KS</StateCode>
    </Institution>
    <ProgramElement>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>7943</Code>
      <Text>PROGRAMMING LANGUAGES</Text>
    </ProgramElement>
  </Award>
</rootTag>
