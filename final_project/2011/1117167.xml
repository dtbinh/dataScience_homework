<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>TC: Small: Collaborative Research: Viewpoints: Discovering Client- and Server-side Input Validation Inconsistencies to Improve Web Application Security</AwardTitle>  
    <AwardEffectiveDate>10/01/2011</AwardEffectiveDate>  
    <AwardExpirationDate>09/30/2013</AwardExpirationDate>  
    <AwardAmount>199994</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05050000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computer and Network Systems</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>Sol J. Greenspan</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>Web applications are an increasingly important part of many aspects of the society, from social interactions to business transactions. Hence, security of web applications is an extremely important and urgent problem. Since web applications are easily accessible, and often store a large amount of sensitive user information, they are a typical target for attackers. In particular, attacks that target input validation vulnerabilities are extremely common and effective. Some of these attacks exploit well-known vulnerabilities, such as cross-site scripting and SQL injection, whereas some others exploit application-specific vulnerabilities that are hard to identify because they depend on the particular input validation logic of the target application. In general, these attacks exploit erroneous or insufficient input validation and sanitization to inject malicious data that can result in execution of harmful commands and access to sensitive information.&lt;br/&gt;&lt;br/&gt;This research aims to identify and mitigate these vulnerabilities in web applications by performing automatic checking of input validation and sanitization operations. The key insight for this work comes from the observation that developers often introduce redundant checks in both the front-end (client) and the back-end (server) component of a web application. Client-side checks are fast and can improve performance and responsiveness of the application, but can be easily circumvented; server-side checks are hard to circumvent, but require network round-trips and additional server-side processing. Our intuition is that the checks performed at the client and server sides should enforce the same set of constraints on the inputs: if client-side checks are more restrictive, the server may accept inputs that legitimate clients can never produce, as malicious users can easily bypass client-side checks. Conversely, if server-side checks are more restrictive, the client may produce requests that are subsequently rejected by the server, which is not ideal from a performance point of view. This research will develop new techniques based on program analysis, string analysis, and code synthesis that can identify, map, model, and compare the set of checks performed on the client and server sides. These techniques will be able to identify and report inconsistencies between the two sets of checks and (semi)automatically extend the checks to eliminate such inconsistencies. By making web applications more secure and efficient, this research has the potential to benefit the increasingly large part of the society that relies on the use of web applications for its daily activities.</AbstractNarration>  
    <MinAmdLetterDate>08/08/2011</MinAmdLetterDate>  
    <MaxAmdLetterDate>08/08/2011</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1117167</AwardID>  
    <Investigator> 
      <FirstName>Alessandro</FirstName>  
      <LastName>Orso</LastName>  
      <EmailAddress>orso@cc.gatech.edu</EmailAddress>  
      <StartDate>08/08/2011</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>Georgia Tech Research Corporation</Name>  
      <CityName>Atlanta</CityName>  
      <ZipCode>303320420</ZipCode>  
      <PhoneNumber>4048944819</PhoneNumber>  
      <StreetAddress>Office of Sponsored Programs</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>Georgia</StateName>  
      <StateCode>GA</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7795</Code>
      <Text>TRUSTWORTHY COMPUTING</Text>
    </ProgramElement>
  </Award> 
</rootTag>
