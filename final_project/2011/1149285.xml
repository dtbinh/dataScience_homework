<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Design Virtualization for Mainstream Programming of Reconfigurable Computers</AwardTitle>
    <AwardEffectiveDate>02/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>01/31/2017</AwardExpirationDate>
    <AwardAmount>172592</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>M. Mimi McClure</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Although reconfigurable computing (RC) devices have been widely shown to have significant performance and power advantages compared to other computing devices, mainstream usage of such devices has been resisted due to increased application design complexity caused by non-mainstream high-level synthesis, complex low-level debugging, lengthy compilation times often requiring hours or days, a lack of code portability, prohibitive device costs, among other challenges. To address these problems, this study introduces RC virtualization to reduce the semantic gap between high-level applications and physical RC devices with hundreds of thousands of fine-grained resources. Whereas physical RC devices must be fine grained for flexibility and cost effectiveness, the proposed virtual RC devices, which are implemented atop such physical devices, can be specialized to the needs of different application domains to hide physical device complexity. As a result, the proposed virtualization enables rapid RC compilation that can complete in seconds as opposed to hours. Rapid RC compilation in turn enables mainstream design methodologies for debugging. Virtualization also enables application portability across physical RC devices, similar to how virtual machines achieve portable software code, in addition to tool portability that enables third-party tools to target any RC system. Finally, by combining virtualization with high-level synthesis from standardized parallel languages for heterogeneous accelerators (e.g., OpenCL), this study enables mainstream RC usage by enabling the design flow used by other mainstream computing devices.</AbstractNarration>
    <MinAmdLetterDate>01/12/2012</MinAmdLetterDate>
    <MaxAmdLetterDate>01/17/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1149285</AwardID>
    <Investigator>
      <FirstName>Greg</FirstName>
      <LastName>Stitt</LastName>
      <EmailAddress>gstitt@ece.ufl.edu</EmailAddress>
      <StartDate>01/12/2012</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Florida</Name>
      <CityName>GAINESVILLE</CityName>
      <ZipCode>326112002</ZipCode>
      <PhoneNumber>3523923516</PhoneNumber>
      <StreetAddress>1 UNIVERSITY OF FLORIDA</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Florida</StateName>
      <StateCode>FL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
  </Award>
</rootTag>
