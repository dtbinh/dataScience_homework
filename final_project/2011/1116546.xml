<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>AF: Small: A Framework For Algorithmic Design of Self-Stabilizing Network Protocols</AwardTitle>  
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>  
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>  
    <AwardAmount>254015</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05010000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computing and Communication Foundations</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>Balasubramanian Kalyanasundaram</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>This research focuses on facilitating the design of Self-Stabilizing (SS) network protocols, where a SS protocol eventually recovers from any troubled configuration to a legitimate configuration (i.e., convergence) and stays in legitimate configurations as long as there are no perturbations (i.e., closure). This is an important problem as today's complex distributed systems (e.g., the Internet) frequently reach illegitimate configurations due to the occurrence of the transient faults that perturb the protocols without causing permanent damage (e.g., bit flips in memory, bad initialization). Most existing methods are based on the manual creation of an initial design and after-the-fact verification of the manual design. This research presents a paradigm shift based on a philosophy of 'synthesize in small scale and generalize'. Specifically, the investigators study (i) the automatic generation of small instances of SS protocol, and (ii) the generalization of the synthesized instances to larger protocols.&lt;br/&gt;&lt;br/&gt;Instead of designing and verifying problem-specific SS protocols, this research provides a reusable repository of synthesis methods for the addition of convergence to nonstabilizing protocols. Moreover, this research presents three techniques for the generalization of the small instances of the synthesized protocols, namely synthesized convergence stairs, cutoff theorems and structural induction. For evaluation, the investigators study the automated design of convergence for real world protocols and classic distributed computing problems (e.g., mutual exclusion and leader election) under different topologies and distinct fairness assumptions. The investigators also identify complexity criteria and compile them in a public benchmark.</AbstractNarration>  
    <MinAmdLetterDate>06/22/2011</MinAmdLetterDate>  
    <MaxAmdLetterDate>06/22/2011</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1116546</AwardID>  
    <Investigator> 
      <FirstName>Ali</FirstName>  
      <LastName>Ebnenasir</LastName>  
      <EmailAddress>aebnenas@mtu.edu</EmailAddress>  
      <StartDate>06/22/2011</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>Michigan Technological University</Name>  
      <CityName>Houghton</CityName>  
      <ZipCode>499311295</ZipCode>  
      <PhoneNumber>9064871885</PhoneNumber>  
      <StreetAddress>1400 Townsend Drive</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>Michigan</StateName>  
      <StateCode>MI</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7796</Code>
      <Text>ALGORITHMIC FOUNDATIONS</Text>
    </ProgramElement>
  </Award> 
</rootTag>
