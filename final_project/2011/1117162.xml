<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>SHF: CSR: Small: Fine-Grained Modularity and Reuse of VM Components</AwardTitle>  
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>  
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>  
    <AwardAmount>499867</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05010000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computing and Communication Foundations</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>John Reppy</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>Much of today's information infrastructure makes use of virtual&lt;br/&gt;machines (VMs). For example, consumer devices typically contain VMs&lt;br/&gt;for Java, JavaScript, and Flash. VMs are often well suited to roll out&lt;br/&gt;new capabilities to a broad range of target devices, which is why new&lt;br/&gt;VMs are being created all the time. Unfortunately, most VMs today are&lt;br/&gt;created from scratch, in spite of the fact that they are broadly&lt;br/&gt;similar. This is a considerable waste of programmer time and money.&lt;br/&gt;The goal of this project is to make creating VMs simpler, by creating&lt;br/&gt;a "toolbox" of components from which new VMs can be constructed&lt;br/&gt;easily.&lt;br/&gt;&lt;br/&gt;The technical challenge is to create building blocks that can be put&lt;br/&gt;together to work as well as the custom-crafted VMs of today. In many&lt;br/&gt;cases, VM performance is critical. For example, on mobile devices, a&lt;br/&gt;slower VM might force us to run the processor at a higher speed,&lt;br/&gt;leading to faster battery depletion. This research promises that &lt;br/&gt;one may one day be able to create a competitively&lt;br/&gt;performing VM for Java, JavaScript and Flash in which some parts are&lt;br/&gt;shared, so that the total size is much smaller than three separate&lt;br/&gt;VMs. This is important for resource-constrained devices such as&lt;br/&gt;mobile phones. Re-using components rather than reinventing the wheel&lt;br/&gt;each time would reduce the entry cost for new languages. Sharing&lt;br/&gt;components would also lead to pooling of debugging resources, reducing&lt;br/&gt;errors and thereby leading to a safer and more stable computing&lt;br/&gt;infrastructure.</AbstractNarration>  
    <MinAmdLetterDate>07/27/2011</MinAmdLetterDate>  
    <MaxAmdLetterDate>07/27/2011</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1117162</AwardID>  
    <Investigator> 
      <FirstName>Michael</FirstName>  
      <LastName>Franz</LastName>  
      <EmailAddress>franz@uci.edu</EmailAddress>  
      <StartDate>07/27/2011</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>University of California-Irvine</Name>  
      <CityName>IRVINE</CityName>  
      <ZipCode>926977600</ZipCode>  
      <PhoneNumber>9498244768</PhoneNumber>  
      <StreetAddress>5171 California Avenue, Ste 150</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>California</StateName>  
      <StateCode>CA</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award> 
</rootTag>
