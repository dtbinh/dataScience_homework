<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF: Small: Adapting Dataflow Analysis for Efficient and Precise Parallel Program Monitoring</AwardTitle>
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>
    <AwardAmount>478599</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>John Reppy</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Due to the industry-wide shift to multi-core processing, future&lt;br/&gt;applications will only run faster if they are written as parallel&lt;br/&gt;software (i.e. where the work for a single program is accomplished by&lt;br/&gt;simultaneously performing different parts of that work on different&lt;br/&gt;processors). Unfortunately history has taught us that writing&lt;br/&gt;parallel software is a very error-prone task for programmers. To&lt;br/&gt;address this challenge, this research project is creating a powerful&lt;br/&gt;new mechanism for identifying and hopefully fixing bugs in parallel&lt;br/&gt;software on large-scale production systems. Hopefully the resulting&lt;br/&gt;framework will not only support the parallel execution of existing&lt;br/&gt;monitoring tools, but it will also spawn the creation of new classes&lt;br/&gt;of powerful tools that can recognize subtle bugs in parallel software.&lt;br/&gt;Such tools can help programmers continue to reap the performance&lt;br/&gt;benefits of future microprocessors, thereby continuing to enable all&lt;br/&gt;of the benefits that increasingly-faster computation has had on the&lt;br/&gt;economy, science and technology, and our everyday lives in an&lt;br/&gt;Internet-connected world.&lt;br/&gt;&lt;br/&gt;More specifically, the focus of this project is on sophisticated&lt;br/&gt;online program monitoring tools that model various aspects of program&lt;br/&gt;correctness at an instruction-by-instruction granularity. To strike a&lt;br/&gt;practical balance between performance, precision, and convenience for&lt;br/&gt;the tool developer, this research has developed a novel framework that&lt;br/&gt;introduces explicit "windows of uncertainty" combined with a new&lt;br/&gt;approach for avoiding a state space explosion in the analysis&lt;br/&gt;(inspired by Tarjan's interval analysis approach to dataflow analysis).</AbstractNarration>
    <MinAmdLetterDate>07/29/2011</MinAmdLetterDate>
    <MaxAmdLetterDate>07/29/2011</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1116898</AwardID>
    <Investigator>
      <FirstName>Todd</FirstName>
      <LastName>Mowry</LastName>
      <EmailAddress>tcm@cs.cmu.edu</EmailAddress>
      <StartDate>07/29/2011</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>Carnegie-Mellon University</Name>
      <CityName>PITTSBURGH</CityName>
      <ZipCode>152133815</ZipCode>
      <PhoneNumber>4122689527</PhoneNumber>
      <StreetAddress>5000 Forbes Avenue</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Pennsylvania</StateName>
      <StateCode>PA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award>
</rootTag>
