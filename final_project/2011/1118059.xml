<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>CSR:Small: Towards Reliable Concurrent Computing Using Hybrid Program Analysis</AwardTitle>  
    <AwardEffectiveDate>08/15/2011</AwardEffectiveDate>  
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>  
    <AwardAmount>354591</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05050000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computer and Network Systems</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>Anita J. LaSalle</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>Inexpensive multi-core processors and many-core GPUs present tremendous opportunities as well as serious challenges for software developers. Developing concurrent programs is intrinsically difficult because multi-threading introduces a whole new class of errors that do not exist in sequential programs. This problem is exacerbated when developing and debugging large-scale, data-intensive, and computation-intensive programs. Traditional testing and debugging techniques are not appropriate for multi-threaded programs which may behave differently from one run to another because threads are scheduled non-deterministically.&lt;br/&gt;&lt;br/&gt;This project develops a toolkit to detect correctness and performance problems on shared memory systems with the following techniques. (1) Exploit the benefits of static and dynamic analyses while avoiding their shortcomings. Specifically, extend dynamic analysis by augmenting it with static analysis to systematically explore program code for error detection and prevention. (2) Investigate different optimization approaches to lower runtime overhead and improve the toolkit's scalability. (3) Design a unified framework that can predict potential errors and enforce the scheduler to avoid the errors by manipulating accessing orders.&lt;br/&gt;&lt;br/&gt;The success of this project may enhance the dependability of parallel computing systems and help design more reliable multi-threaded programs. Research results will be integrated into the teaching of undergraduate and graduate courses such as operating systems, parallel programming, and compiler design.</AbstractNarration>  
    <MinAmdLetterDate>08/08/2011</MinAmdLetterDate>  
    <MaxAmdLetterDate>08/08/2011</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1118059</AwardID>  
    <Investigator> 
      <FirstName>Liqiang</FirstName>  
      <LastName>Wang</LastName>  
      <EmailAddress>wang@cs.uwyo.edu</EmailAddress>  
      <StartDate>08/08/2011</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>University of Wyoming</Name>  
      <CityName>Laramie</CityName>  
      <ZipCode>820712000</ZipCode>  
      <PhoneNumber>3077665320</PhoneNumber>  
      <StreetAddress>1000 E. University Avenue</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>Wyoming</StateName>  
      <StateCode>WY</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7354</Code>
      <Text>COMPUTER SYSTEMS</Text>
    </ProgramElement>
  </Award> 
</rootTag>
