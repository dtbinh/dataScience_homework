<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>EAGER: From Devlopment Tools to Secure Web Applications</AwardTitle>
    <AwardEffectiveDate>09/01/2011</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2013</AwardExpirationDate>
    <AwardAmount>260175</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05050000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Network Systems</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Web Application Frameworks, such as Google Web Toolkit (GWT) and Rails are being widely used nowadays because of numerous advantages they offer their users. A growing concern is whether such tools introduce security vulnerabilities during the translations they perform. Translation validation is an approach that allows one to verify the correctness of a translation rather than that of a translator. The input to translation validation is a source and target code (before and after translation), and the output is a set of verification conditions (VCs) that establish the semantic correctness of the translation. The VCs are automatically generated and can be charged to independent theorem provers. Translations validations had been successfully applied to optimizing compilers and to backward compatibility of microcode. &lt;br/&gt;&lt;br/&gt;The work is a preliminary feasibility study of applying translation validation to verifying that frameworks do not introduce security vulnerabilities. The focus is GWT's translations from Java into JavaScript. The project's goal is to develop automatic tools that given a source and target code, as well as a suitably encoded list of security vulnerabilities, automatically generates VCs that, in aggregate, prove that the target does not have any of the security vulnerabilities from the list that do not exist in the source code. &lt;br/&gt;&lt;br/&gt;A successful completion of this feasibility study will allow for the development of methodologies and tools for automatic and formal proofs that frameworks do not introduce security vulnerabilities that will be of interest to web developers as well as to industry.</AbstractNarration>
    <MinAmdLetterDate>08/17/2011</MinAmdLetterDate>
    <MaxAmdLetterDate>05/30/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1141863</AwardID>
    <Investigator>
      <FirstName>Lenore</FirstName>
      <LastName>Zuck</LastName>
      <EmailAddress>lenore@cs.uic.edu</EmailAddress>
      <StartDate>08/17/2011</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Investigator>
      <FirstName>V. N.</FirstName>
      <LastName>Venkatakrishnan</LastName>
      <EmailAddress>venkat@cs.uic.edu</EmailAddress>
      <StartDate>08/17/2011</StartDate>
      <EndDate/>
      <RoleCode>2</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Illinois at Chicago</Name>
      <CityName>CHICAGO</CityName>
      <ZipCode>606127205</ZipCode>
      <PhoneNumber>3129962862</PhoneNumber>
      <StreetAddress>809 S MARSHFIELD RM 608</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Illinois</StateName>
      <StateCode>IL</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7795</Code>
      <Text>TRUSTWORTHY COMPUTING</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>8060</Code>
      <Text>Secure &amp;Trustworthy Cyberspace</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>1668</Code>
      <Text>FED CYBER SERV: SCHLAR FOR SER</Text>
    </ProgramElement>
  </Award>
</rootTag>
