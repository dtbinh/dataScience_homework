<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>SHF: Small: Promoting Efficient Debugging and High-Quality Software through Contextual Understanding of Faults</AwardTitle>  
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>  
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>  
    <AwardAmount>499600</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05010000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computing and Communication Foundations</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>John Reppy</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>Software defects, or bugs, are a significant issue in software development and society. The cost of dealing with the faults caused by these defects is significant. Once a software fault has been identified, either by a failing test case or due to a failure in use, it can be difficult and time consuming to identify the defect responsible for the fault and how to repair it. This research will combine information from analysis of the program and the failing run to help understand the context of the fault, and provide a developer with visualizations and other information to help them understand the fault and repair the software.&lt;br/&gt;&lt;br/&gt;The technical focus of this work consists of novel software analyses, software models, and software-development interfaces and visualizations to support software development, comprehension, and fault repair. These techniques capture and utilize static and dynamic information about the program and its execution to model relations among software elements and their functionality. These hybrid static/dynamic models can be used as the basis for the exploration of a program when attempting to understand the nature and context of software faults so that they may be effectively and efficiently repaired. These software models utilize lightweight and commonplace dynamic information, thus making them practical and ready for near-term adoption. The interfaces and visualizations present the program to software developers in a way to reveal interactions within software, thus allowing them to comprehend larger and more complex systems than is currently possible. As such, the research will enable software-development industry to better understand and repair software faults, thus producing higher quality software, which will benefit society at large.</AbstractNarration>  
    <MinAmdLetterDate>07/20/2011</MinAmdLetterDate>  
    <MaxAmdLetterDate>07/20/2011</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1116943</AwardID>  
    <Investigator> 
      <FirstName>James</FirstName>  
      <LastName>Jones</LastName>  
      <EmailAddress>jajones@ics.uci.edu</EmailAddress>  
      <StartDate>07/20/2011</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>University of California-Irvine</Name>  
      <CityName>IRVINE</CityName>  
      <ZipCode>926977600</ZipCode>  
      <PhoneNumber>9498244768</PhoneNumber>  
      <StreetAddress>5171 California Avenue, Ste 150</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>California</StateName>  
      <StateCode>CA</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award> 
</rootTag>
