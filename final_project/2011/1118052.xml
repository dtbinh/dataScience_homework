<?xml version="1.0" encoding="UTF-8"?>

<rootTag> 
  <Award> 
    <AwardTitle>SHF: HCC: Small: Software Design Sketching</AwardTitle>  
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>  
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>  
    <AwardAmount>500000</AwardAmount>  
    <AwardInstrument> 
      <Value>Standard Grant</Value> 
    </AwardInstrument>  
    <Organization> 
      <Code>05010000</Code>  
      <Directorate> 
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName> 
      </Directorate>  
      <Division> 
        <LongName>Division of Computing and Communication Foundations</LongName> 
      </Division> 
    </Organization>  
    <ProgramOfficer> 
      <SignBlockName>Sol J. Greenspan</SignBlockName> 
    </ProgramOfficer>  
    <AbstractNarration>Software design sketching refers to the practice of software designers to, when faced with a design problem, not immediately turn to existing modeling tools, instead choosing to use pen-and-paper or the whiteboard to work through the problem and come up with a solution. This research explores modern hardware such as electronic whiteboards, tablets, and their latest incarnations, iPads and Slates, in creating a novel, computer-supported software design sketching environment that significantly enhances the software design sketching experience.&lt;br/&gt;&lt;br/&gt;The work consists of two interwoven strands. One strand involves field studies of professional software designers at three different companies working on real design problems in their native environments. Findings from these studies anchor the work in the second strand, which involves the design, development, and evaluation of Calico, a design sketching environment centering on five distinct features: (1) fluid manipulation of sketched content through carefully designed gestures, (2) refinement from rough sketches to precise models through scraps and softmodes, (3) approximate analysis of incomplete and imprecise models via annotations and imprecise languages, (4) abstraction from code to sketch through contextualized sketching, and (5) access to and reflection upon design history through intentional interfaces and design history views.&lt;br/&gt;&lt;br/&gt;The techniques and tools developed by this project are intended to transform how software designers work and improve the quality of the resulting software-intensive systems, with impact in both in industry and in education.</AbstractNarration>  
    <MinAmdLetterDate>07/19/2011</MinAmdLetterDate>  
    <MaxAmdLetterDate>07/19/2011</MaxAmdLetterDate>  
    <ARRAAmount/>  
    <AwardID>1118052</AwardID>  
    <Investigator> 
      <FirstName>Adriaan</FirstName>  
      <LastName>van der Hoek</LastName>  
      <EmailAddress>andre@ics.uci.edu</EmailAddress>  
      <StartDate>07/19/2011</StartDate>  
      <EndDate/>  
      <RoleCode>1</RoleCode> 
    </Investigator>  
    <Institution> 
      <Name>University of California-Irvine</Name>  
      <CityName>IRVINE</CityName>  
      <ZipCode>926977600</ZipCode>  
      <PhoneNumber>9498244768</PhoneNumber>  
      <StreetAddress>5171 California Avenue, Ste 150</StreetAddress>  
      <CountryName>United States</CountryName>  
      <StateName>California</StateName>  
      <StateCode>CA</StateCode> 
    </Institution>  
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award> 
</rootTag>
