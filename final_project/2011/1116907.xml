<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>SHF :Small: Foundations of Permission-Based Object-Oriented Languages</AwardTitle>
    <AwardEffectiveDate>08/01/2011</AwardEffectiveDate>
    <AwardExpirationDate>07/31/2014</AwardExpirationDate>
    <AwardAmount>500000</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>John Reppy</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>This research project is exploring a new way of writing computer&lt;br/&gt;programs, based on a new programming language Plaid. Plaid is the first&lt;br/&gt;programming language to incorporate "permissions" natively into the&lt;br/&gt;language. These permissions allow the programming language to more&lt;br/&gt;accurately model things that change--for example, a connection to a web&lt;br/&gt;site that might be interrupted and then later reconnected. Such a&lt;br/&gt;permission-based language helps engineers coordinate on a software&lt;br/&gt;project, making engineers more productive, and reducing bugs that&lt;br/&gt;end-users see.&lt;br/&gt;&lt;br/&gt;On a technical level, the project integrates permissions such as&lt;br/&gt;"unique," "immutable," and "shared" into the language via a new kind of&lt;br/&gt;type system, based on linear logic. These permissions express aliasing&lt;br/&gt;information, and this aliasing information can be leveraged to do many&lt;br/&gt;things, including safely changing the representation of objects at run&lt;br/&gt;time and automatically parallelizing code. The project is investigating&lt;br/&gt;the design of a single permission system that can address multiple such&lt;br/&gt;concerns; investigating how models of inheritance, composition,&lt;br/&gt;sub typing, casts, and polymorphism must be adapted to handle&lt;br/&gt;permissions; and what design choices can best make such a language&lt;br/&gt;practical for writing programs of significant scale and design complexity.</AbstractNarration>
    <MinAmdLetterDate>07/27/2011</MinAmdLetterDate>
    <MaxAmdLetterDate>07/27/2011</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1116907</AwardID>
    <Investigator>
      <FirstName>Jonathan</FirstName>
      <LastName>Aldrich</LastName>
      <EmailAddress>jonathan.aldrich@cs.cmu.edu</EmailAddress>
      <StartDate>07/27/2011</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>Carnegie-Mellon University</Name>
      <CityName>PITTSBURGH</CityName>
      <ZipCode>152133815</ZipCode>
      <PhoneNumber>4122689527</PhoneNumber>
      <StreetAddress>5000 Forbes Avenue</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Pennsylvania</StateName>
      <StateCode>PA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
  </Award>
</rootTag>
