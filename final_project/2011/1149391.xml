<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Analysis and Automation of Systematic Software Modifications</AwardTitle>
    <AwardEffectiveDate>09/01/2012</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2017</AwardExpirationDate>
    <AwardAmount>169841</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Directorate for Computer &amp; Information Science &amp; Engineering</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computer and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Software systems evolve. Developers must add features, fix bugs, and rewrite software systems to provide better functionality and higher performance. Existing systems also need to migrate to new hardware, computing environments, programming models, and libraries. There exist redundancies, inefficiencies, and error-proneness in the way that we evolve software systems today. In particular, recent empirical studies indicate that developers often apply similar but not identical changes to similar contexts. Making such systematic, repetitive program modifications is a tedious, manual, error-prone process.&lt;br/&gt;&lt;br/&gt;This project will investigate the extent and nature of repetitive program modifications and will design, build, and evaluate a novel approach, called SYDIT, which improves developer productivity in applying systematic changes. In this approach, developers no longer apply similar changes manually. Instead, developers provide the old and new version of selected code as an example change, and SYDIT will generalize a reusable, abstract, context-aware program transformation from it.&lt;br/&gt;(1) SYDIT will compute program differences between the old and new version of selected code and create a reusable edit script by identifying relevant data and control flow context and by abstracting the edits' content and position.&lt;br/&gt;(2) SYDIT will then automatically identify related candidate change locations and produce concrete, customized edits to each candidate.&lt;br/&gt;Incorporation with testing and change impact analysis will help developers validate suggested changes. SYDIT's new differential delta analysis will help developers understand the effect of ported changes in each target context.&lt;br/&gt;(3) Using a large corpus of project histories, this project will investigate the frequency and types of repetitive changes. The resulting data set will be used to evaluate SYDIT's accuracy and capability and to assess a productivity gain that can be achieved by SYDIT.&lt;br/&gt;The impact of this research will be substantially improved developer productivity in evolving large software systems. By helping developers apply changes to similar contexts exhaustively and inspect the effect of suggested changes, SYDIT will reduce errors of omission and relieve developers from tedious, error-prone hand editing. The empirical studies will expand our understanding of repetitive program changes during software evolution.</AbstractNarration>
    <MinAmdLetterDate>12/14/2011</MinAmdLetterDate>
    <MaxAmdLetterDate>03/28/2013</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1149391</AwardID>
    <Investigator>
      <FirstName>Miryung</FirstName>
      <LastName>Kim</LastName>
      <EmailAddress>miryung@ece.utexas.edu</EmailAddress>
      <StartDate>12/14/2011</StartDate>
      <EndDate/>
      <RoleCode>1</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Texas at Austin</Name>
      <CityName>Austin</CityName>
      <ZipCode>787121532</ZipCode>
      <PhoneNumber>5124716424</PhoneNumber>
      <StreetAddress>101 E. 27th Street, Suite 5.300</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Texas</StateName>
      <StateCode>TX</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>1640</Code>
      <Text>INFORMATION TECHNOLOGY RESEARC</Text>
    </ProgramElement>
  </Award>
</rootTag>
